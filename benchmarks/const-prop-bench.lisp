
(define (big-const)
  (let ((a (+ 1 2)))
    (let ((b (- a 0)))
      (let ((c (+ a (+ b b))))
        (let ((d (if (< c b) a b)))
          (let ((e (+ d b)))
            (let ((f (+ a (+ b (+ c d)))))
              (let ((g (< f e)))
                (let ((h (if g d c)))
                  (let ((i (+ 10 (- 11 12))))
                    (let ((j (= i i)))
                      (let ((k (- i (- i (- h i)))))
                        (let ((l (if true (+ a b) (- h i))))
                          (let ((m (if (if false true false) (+ k j) (< f a))))
                            (let ((n (- a (- b c))))
                              (let ((o 1567))
                                (let ((p (+ o (+ o (+ o o)))))
                                  (let ((q false))
                                    (let ((r (+ p (+ o p))))
                                      a)))))))))))))))))))

(define (n-times n)
  (if (= n 0)
    0
    (do
      (big-const)
      (n-times (sub1 n)))))

(print (n-times 10000000))